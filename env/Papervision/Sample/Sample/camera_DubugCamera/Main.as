package {	import flash.display.*;	import flash.events.*;		import org.papervision3d.scenes.Scene3D;	import org.papervision3d.objects.DisplayObject3D;	import org.papervision3d.objects.primitives.Cube;	import org.papervision3d.cameras.DebugCamera3D;	import org.papervision3d.view.Viewport3D;	import org.papervision3d.render.BasicRenderEngine;	import org.papervision3d.materials.MovieAssetMaterial;	import org.papervision3d.materials.utils.MaterialsList;	[SWF(width="1024", height="568", backgroundColor="#CCCCCC", frameRate="50")]	public class Main extends Sprite {			private var scene:Scene3D;		private var camera:DebugCamera3D;		private var viewport:Viewport3D;		private var renderer:BasicRenderEngine;				private var stageW:Number;		private var stageH:Number;		private var vpX:Number;		private var vpY:Number;		// -- SWC書き出しのためのインスタンス化 Start -- //		private var m_1:Back = new Back();		private var m_2:Bottom = new Bottom();		private var m_3:Front = new Front();		private var m_4:Left = new Left();		private var m_5:Right = new Right();		private var m_6:Top = new Top();		// -- SWC書き出しのためのインスタンス化 End -- //				public function Main () {						init();		}			private function init():void {			setStage();			setScene();			setCamera();			setDO3D();						addEventListener(Event.ENTER_FRAME, onEnterFrameHandler);		}				private function setStage():void {			stage.quality = StageQuality.MEDIUM;			stage.scaleMode = StageScaleMode.NO_SCALE;			stage.align = StageAlign.TOP_LEFT;			stageW = stage.stageWidth;			stageH = stage.stageHeight;			vpX = stageW / 2;			vpY = stageH / 2;		}				private function setScene():void{			renderer = new BasicRenderEngine();			scene = new Scene3D();			viewport  = new Viewport3D(0, 0, true, true);			addChild(viewport);		}				private function setCamera():void {			camera = new DebugCamera3D(viewport);			camera.x = 0;			camera.y = 100;			camera.z = -600;			camera.zoom = 30;			camera.focus = 30;			camera.useCulling = true;			camera.target = DisplayObject3D.ZERO;		}				private function setDO3D():void {			var materialF:MovieAssetMaterial = new MovieAssetMaterial("Front", true );			var materialB:MovieAssetMaterial = new MovieAssetMaterial("Back", true );			var materialR:MovieAssetMaterial = new MovieAssetMaterial("Right", true );			var materialL:MovieAssetMaterial = new MovieAssetMaterial("Left", true );			var materialT:MovieAssetMaterial = new MovieAssetMaterial("Top", true );			var materialBo:MovieAssetMaterial = new MovieAssetMaterial("Bottom", true );						materialF.oneSide = false;			materialB.oneSide = false;			materialR.oneSide = false;			materialL.oneSide = false;			materialT.oneSide = false;			materialBo.oneSide = false;						var materialList:MaterialsList = new MaterialsList({				front: materialF,				back: materialB,				right: materialR,				left: materialL,				top: materialT,				bottom: materialBo			});						var cube:Cube = new Cube(materialList, 1000, 1000, 1000, 10, 10, 10);			scene.addChild(cube);		}			private function onEnterFrameHandler(event:Event):void {			renderer.renderScene(scene, camera, viewport);		}	}}