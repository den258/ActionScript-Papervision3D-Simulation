package {	import flash.display.*;	import flash.events.*;	import flash.geom.Point;		[SWF(width="1024", height="568", backgroundColor="#333333", frameRate="50")]	public class Main extends Sprite {				private var stageW:Number;		private var stageH:Number;		private var vpX:Number;		private var vpY:Number;				private var spriteA:Sprite;		private var spriteB:Sprite;				private var LocalPositionSpriteB:Point;		private var GlobalPositionSpriteB:Point;						private var spriteInfo:SpriteInfo;				public function Main () {						init();		}			private function init():void {			setStage();			setSprite();			setSpriteInfo();						stage.addEventListener(Event.ENTER_FRAME, onEnterFrameHandler);			stage.addEventListener(Event.RESIZE, onStageResizeHandler);		}				private function setStage():void {			stage.quality = StageQuality.MEDIUM;			stage.scaleMode = StageScaleMode.NO_SCALE;			stage.align = StageAlign.TOP_LEFT;			stageW = stage.stageWidth;			stageH = stage.stageHeight;			vpX = stageW / 2;			vpY = stageH / 2;		}				private function setSprite():void {			spriteA = drawRectangle(300, 300, 0xCCCCCC);			spriteA.x = 150;			spriteA.y = 150;			spriteA.buttonMode = true;			addChild(spriteA);			spriteA.addEventListener(MouseEvent.MOUSE_DOWN, onMouseDownHandlerA);						spriteB = drawRectangle(100, 100, 0x666666);			spriteB.x = 0;			spriteB.y = 0;			spriteB.buttonMode = true;			spriteA.addChild(spriteB);			spriteB.addEventListener(MouseEvent.MOUSE_DOWN, onMouseDownHandlerB);		}			private function drawRectangle (w:Number=50, h:Number=50, color:uint=0xff0000):Sprite {			var R:Sprite = new Sprite();			R.graphics.beginFill(color);			R.graphics.drawRect(-w/2,-h/2,w,h);			R.graphics.endFill();			return R;		}				private function setSpriteInfo():void {			spriteInfo = new SpriteInfo();			addChild(spriteInfo);			spriteInfo.x = stageW;			spriteInfo.y = stageH;		}				private function onEnterFrameHandler(event:Event):void {			LocalPositionSpriteB = new Point(spriteB.x, spriteB.y);			GlobalPositionSpriteB = spriteA.localToGlobal(LocalPositionSpriteB);						spriteInfo.spriteAx.text = spriteA.x.toString();			spriteInfo.spriteAy.text = spriteA.y.toString();			spriteInfo.spriteAwidth.text = spriteA.width.toString();			spriteInfo.spriteAheight.text = spriteA.height.toString();						spriteInfo.spriteBx.text = spriteB.x.toString();			spriteInfo.spriteBy.text = spriteB.y.toString();			spriteInfo.spriteBwidth.text = spriteB.width.toString();			spriteInfo.spriteBheight.text = spriteB.height.toString();			spriteInfo.GlobalspriteBx.text = GlobalPositionSpriteB.x.toString();			spriteInfo.GlobalspriteBy.text = GlobalPositionSpriteB.y.toString();		}				private function onMouseDownHandlerA(event:MouseEvent):void {			spriteA.startDrag();			stage.addEventListener(MouseEvent.MOUSE_UP, onMouseUpHandlerA);		}				private function onMouseUpHandlerA(event:MouseEvent):void {			stage.removeEventListener(MouseEvent.MOUSE_UP, onMouseUpHandlerA);			spriteA.stopDrag();		}				private function onMouseDownHandlerB(event:MouseEvent):void {			spriteB.startDrag();			stage.addEventListener(MouseEvent.MOUSE_UP, onMouseUpHandlerB);			spriteA.removeEventListener(MouseEvent.MOUSE_DOWN, onMouseDownHandlerA);		}				private function onMouseUpHandlerB(event:MouseEvent):void {			stage.removeEventListener(MouseEvent.MOUSE_UP, onMouseUpHandlerB);			spriteB.stopDrag();			spriteA.addEventListener(MouseEvent.MOUSE_DOWN, onMouseDownHandlerA);		}				private function onStageResizeHandler(event:Event):void {			stageW = stage.stageWidth;			stageH = stage.stageHeight;			vpX = stageW / 2;			vpY = stageH / 2;			spriteInfo.x = stageW;			spriteInfo.y = stageH;		}	}}