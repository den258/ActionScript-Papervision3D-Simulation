package {	import flash.display.*;	import flash.events.*;	import flash.utils.*;		import org.papervision3d.scenes.Scene3D;	import org.papervision3d.objects.DisplayObject3D;	import org.papervision3d.objects.primitives.*;	import org.papervision3d.cameras.*;	import org.papervision3d.view.Viewport3D;	import org.papervision3d.render.BasicRenderEngine;	import org.papervision3d.materials.*;	import org.papervision3d.lights.PointLight3D;	import org.papervision3d.materials.shadematerials.*;	import org.papervision3d.materials.special.CompositeMaterial;	import org.papervision3d.events.*;	import org.papervision3d.core.utils.Mouse3D;	import org.papervision3d.view.layer.*;	[SWF(width="1024", height="568", backgroundColor="#333333", frameRate="50")]	public class Main extends Sprite {			private var scene:Scene3D;		private var camera:Camera3D;		private var viewport:Viewport3D;		private var renderer:BasicRenderEngine;		private var light:PointLight3D;		private var plane:Plane;		private var sphere:Sphere;		private var viewportLayerForSphere:ViewportLayer;				private var mouseX3D:Number = 0;		private var mouseY3D:Number = 0;		private var mouseZ3D:Number = 0;				private var stageW:Number;		private var stageH:Number;		private var vpX:Number;		private var vpY:Number;				private var cameraInfo:CameraInfo;				private var time:Number = 0;		private var secondTime:Number = 0;		private var previousSecondTime:Number = 0;		private var frameNum:Number = 0;		private var fps:String = "...";				public function Main () {						init();		}			private function init():void {			setStage();			setScene();			setLight();			setCamera();			setDO3D();			setCameraInfo();						addEventListener(Event.ENTER_FRAME, onEnterFrameHandler);			stage.addEventListener(Event.RESIZE, onStageResizeHandler);		}				private function setStage():void {			stage.quality = StageQuality.MEDIUM;			stage.scaleMode = StageScaleMode.NO_SCALE;			stage.align = StageAlign.TOP_LEFT;			stageW = stage.stageWidth;			stageH = stage.stageHeight;			vpX = stageW / 2;			vpY = stageH / 2;		}				private function setCameraInfo():void {			cameraInfo = new CameraInfo();			addChild(cameraInfo);			stageW = stage.stageWidth;			stageH = stage.stageHeight;			vpX = stageW / 2;			vpY = stageH / 2;			cameraInfo.x = stageW;			cameraInfo.y = stageH;		}				private function setScene():void{			renderer = new BasicRenderEngine();			scene = new Scene3D();			viewport  = new Viewport3D(0, 0, true, true);			viewport.containerSprite.buttonMode = true;			Mouse3D.enabled = true;			addChild(viewport);		}				private function setLight():void {			light = new PointLight3D(true);			light.x = 0;			light.y = 100;			light.z = -10;			scene.addChild(light);		}				private function setCamera():void {			camera = new Camera3D();			camera.x = 0;			camera.y = 0;			camera.z = -800;			camera.zoom = 30;			camera.focus = 30;			camera.target = DisplayObject3D.ZERO;		}				private function setDO3D():void {			var spherematerial:FlatShadeMaterial = new FlatShadeMaterial(light, 0xFFFFFF, 0x333333, 20);			sphere = new Sphere(spherematerial, 20, 10, 10);			sphere.z = -10;			scene.addChild(sphere);			viewportLayerForSphere = sphere.createViewportLayer(viewport, true);						var wireframematerial:WireframeMaterial = new WireframeMaterial(0x666666);			var colormaterial:ColorMaterial = new ColorMaterial(0xDDDDDD);			var material:CompositeMaterial = new CompositeMaterial();			material.addMaterial(wireframematerial);			material.addMaterial(colormaterial);			material.oneSide = false;			material.interactive = true;			plane = new Plane(material, 400, 400, 4, 4);			plane.addEventListener(InteractiveScene3DEvent.OBJECT_CLICK, onClickHandler);			scene.addChild(plane);		}				private function getFPS():void {			time = getTimer();			secondTime = time - previousSecondTime;			if(secondTime >= 1000) {				fps = frameNum.toString();				frameNum = 0;				previousSecondTime = time;			} else {				frameNum++;			}			cameraInfo.fpsText.text = fps+"FPS";			cameraInfo.cameraX.text = camera.x.toString();			cameraInfo.cameraY.text = camera.y.toString();			cameraInfo.cameraZ.text = camera.z.toString();		}				private function onClickHandler(event:Event):void {			mouseX3D = viewport.interactiveSceneManager.mouse3D.x;			mouseY3D = viewport.interactiveSceneManager.mouse3D.y;			mouseZ3D = viewport.interactiveSceneManager.mouse3D.z;		}				private function onEnterFrameHandler(event:Event):void {			moveSphere(mouseX3D, mouseY3D);			renderer.renderScene(scene, camera, viewport);			getFPS();		}				private function moveSphere(posX:Number, posY:Number):void {			sphere.x += (posX - sphere.x) / 5;			sphere.y += (posY - sphere.y) / 5;		}				private function onStageResizeHandler(event:Event):void {			stageW = stage.stageWidth;			stageH = stage.stageHeight;			vpX = stageW / 2;			vpY = stageH / 2;			cameraInfo.x = stageW;			cameraInfo.y = stageH;		}	}}