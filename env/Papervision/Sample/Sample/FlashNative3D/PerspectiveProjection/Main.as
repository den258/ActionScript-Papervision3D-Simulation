package {	import flash.display.*;	import flash.events.*;	import fl.controls.Slider;	import fl.events.SliderEvent;	import flash.geom.PerspectiveProjection;	[SWF(width="1024", height="568", backgroundColor="#CCCCCC", frameRate="50")]	public class Main extends Sprite {				private var stageW:Number = stage.stageWidth;		private var stageH:Number = stage.stageHeight;		private var vpX:Number = stageW / 2;		private var vpY:Number = stageH / 2;		private var scene:Sprite;				private var spriteA:Sprite;				private var copyrights:Copyrights;		private var sliders:Sliders;				private var myFOVSlider:Slider;		private var myxSlider:Slider;		private var myySlider:Slider;		private var myzSlider:Slider;			public function Main () {						init();		}			private function init():void {			setStage();			setScene();			setSprite();			setCopyright();			setSliders();						addEventListener(Event.ENTER_FRAME, onEnterFrameHandler);			stage.addEventListener(Event.RESIZE, onStageResizeHandler);		}				private function setStage():void {			stage.quality = StageQuality.MEDIUM;			stage.scaleMode = StageScaleMode.NO_SCALE;			stage.align = StageAlign.TOP_LEFT;		}				private function setScene():void{			scene = new Sprite();			scene.x = vpX;			scene.y = vpY;			addChild(scene);		}				private function setSprite():void {			spriteA = new Sprite();			scene.addChild(spriteA);			spriteA.y = 100;			spriteA.rotationX = -90;						var image:Bitmap = new Bitmap(new Image(0, 0));			image.x = -image.width/2;			image.y = -image.height/2;			spriteA.addChild(image);		}		private function setCopyright():void {			copyrights = new Copyrights();			addChild(copyrights);			stageW = stage.stageWidth;			stageH = stage.stageHeight;			vpX = stageW / 2;			vpY = stageH / 2;			copyrights.x = stageW;			copyrights.y = stageH;		}		private function setSliders():void {			sliders = new Sliders();			addChild(sliders);			myFOVSlider = sliders.myFOVSlider;			myxSlider = sliders.myxSlider;			myySlider = sliders.myySlider;			myzSlider = sliders.myzSlider;			myFOVSlider.addEventListener(SliderEvent.THUMB_DRAG, myFOVSliderDragHandler);			myxSlider.addEventListener(SliderEvent.THUMB_DRAG, myxSliderDragHandler);			myySlider.addEventListener(SliderEvent.THUMB_DRAG, myySliderDragHandler);			myzSlider.addEventListener(SliderEvent.THUMB_DRAG, myzSliderDragHandler);						myFOVSlider.value = root.transform.perspectiveProjection.fieldOfView;			myxSlider.value = spriteA.x;			myySlider.value = spriteA.y;			myzSlider.value = spriteA.z;		}			private function onEnterFrameHandler(event:Event):void {			copyrights.spriteAx.text = spriteA.x.toString();			copyrights.spriteAy.text = spriteA.y.toString();			copyrights.spriteAz.text = spriteA.z.toString();			copyrights.spriteAwidth.text = spriteA.width.toString();			copyrights.spriteAheight.text = spriteA.height.toString();			copyrights.spriteArotationX.text = spriteA.rotationX.toString();			copyrights.spriteArotationY.text = spriteA.rotationY.toString();			copyrights.spriteArotationZ.text = spriteA.rotationZ.toString();						copyrights.FieldOfView.text = root.transform.perspectiveProjection.fieldOfView.toString();			copyrights.FocalLength.text = root.transform.perspectiveProjection.focalLength.toString();			copyrights.ProjectionCenter.text = root.transform.perspectiveProjection.projectionCenter.toString();		}				private function onStageResizeHandler(event:Event):void {			stageW = stage.stageWidth;			stageH = stage.stageHeight;			vpX = stageW / 2;			vpY = stageH / 2;			scene.x = vpX;			scene.y = vpY;			copyrights.x = stageW;			copyrights.y = stageH;		}				private function myFOVSliderDragHandler(event:SliderEvent):void {			root.transform.perspectiveProjection.fieldOfView = myFOVSlider.value;		}				private function myxSliderDragHandler(event:SliderEvent):void {			spriteA.x = myxSlider.value;		}				private function myySliderDragHandler(event:SliderEvent):void {			spriteA.y = myySlider.value;		}				private function myzSliderDragHandler(event:SliderEvent):void {			spriteA.z = myzSlider.value;		}	}}