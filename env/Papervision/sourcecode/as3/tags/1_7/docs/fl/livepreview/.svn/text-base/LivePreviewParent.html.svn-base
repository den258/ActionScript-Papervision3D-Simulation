<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link rel="stylesheet" href="../../style.css" type="text/css" media="screen">
<link rel="stylesheet" href="../../print.css" type="text/css" media="print">
<meta content="LivePreviewParent,fl.livepreview.LivePreviewParent,myInstance,onResize,onUpdate,propertyInspectorSettingUpdate" name="keywords">
<title>fl.livepreview.LivePreviewParent</title>
</head>
<body>
<script type="text/javascript" language="javascript" src="../../asdoc.js"></script><script type="text/javascript" language="javascript" src="../../cookies.js"></script><script type="text/javascript" language="javascript">
<!--
				asdocTitle = 'LivePreviewParent - Papervision3D API';
				var baseRef = '../../';
				window.onload = configPage;
			--></script>
<table style="display:none" id="titleTable" cellspacing="0" cellpadding="0" class="titleTable">
<tr>
<td align="left" class="titleTableTitle">API Documentation</td><td align="right" class="titleTableTopNav"><a onclick="loadClassListFrame('../../all-classes.html')" href="../../package-summary.html">All&nbsp;Packages</a>&nbsp;|&nbsp;<a onclick="loadClassListFrame('../../all-classes.html')" href="../../class-summary.html">All&nbsp;Classes</a>&nbsp;|&nbsp;<a onclick="loadClassListFrame('../../index-list.html')" href="../../all-index-A.html">Index</a>&nbsp;|&nbsp;<a href="../../index.html?fl/livepreview/LivePreviewParent.html&amp;fl/livepreview/class-list.html" id="framesLink1">Frames</a><a onclick="parent.location=document.location" href="" style="display:none" id="noFramesLink1">No&nbsp;Frames</a></td><td rowspan="3" align="right" class="titleTableLogo"><img alt="Adobe Logo" title="Adobe Logo" class="logoImage" src="../../images/logo.jpg"></td>
</tr>
<tr class="titleTableRow2">
<td align="left" id="subTitle" class="titleTableSubTitle">Class&nbsp;LivePreviewParent</td><td align="right" id="subNav" class="titleTableSubNav"><a href="#propertySummary">Properties</a>&nbsp;| <a href="#methodSummary">Methods</a></td>
</tr>
<tr class="titleTableRow3">
<td colspan="2">&nbsp;</td>
</tr>
</table>
<script type="text/javascript" language="javascript">
<!--
if (!isEclipse() || window.name != ECLIPSE_FRAME_NAME) {titleBar_setSubTitle("ClassÂ LivePreviewParent"); titleBar_setSubNav(false,true,false,false,false,false,true,false,false,false,false,false,false,false);}
--></script>
<div class="MainContent">
<table cellspacing="0" cellpadding="0" class="classHeaderTable">
<tr>
<td class="classHeaderTableLabel">Package</td><td><a onclick="javascript:loadClassListFrame('class-list.html')" href="package-detail.html">fl.livepreview</a></td>
</tr>
<tr>
<td class="classHeaderTableLabel">Class</td><td class="classSignature">public class LivePreviewParent</td>
</tr>
<tr>
<td class="classHeaderTableLabel">Inheritance</td><td class="inheritanceList">LivePreviewParent <img class="inheritArrow" alt="Inheritance" title="Inheritance" src="../../images/inherit-arrow.gif"> flash.display.MovieClip</td>
</tr>
</table>
<p></p>
  The LivePreviewParent class provides the timeline for a SWC file 
  or for a compiled clip that is being exported when ActionScript 3.0 
  is selected.
       <p>When a property is set on a component instance or when a component 
  instance is resized on the Stage, Flash makes calls to the methods of 
  this class, which in turn call methods in your component code to set 
  the properties and to resize the component.</p>
    <p>In cases where your component must implement a specific action when 
  it is in live preview mode, use the following code to test for live preview 
  mode:</p>
    <div class='listing'><pre>var isLivePreview:Boolean = (parent != null &amp;&amp; getQualifiedClassName(parent) == "fl.livepreview::LivePreviewParent");</pre></div>
    <p>The LivePreviewParent class supports the definition of a <code>setSize()</code> 
  method that uses <code>width</code> and <code>height</code> values to resize 
  a component. If you do not define a <code>setSize()</code> method, this object 
  sets the <code>width</code> and <code>height</code> properties individually.</p>
    <p>You can also use this class to create a custom live preview SWF file without 
  creating a SWC file; however, it is probably easier to create a component live 
  preview file by:</p>
  <ul>
  <li>Exporting your component as a SWC file.</li>
  <li>Changing the .swc file extension to .zip.</li>
  <li>Extracting the SWF file within the ZIP file.</li>
  </ul> 
  <p>To create a component live preview file in this way, follow these steps:</p>
  <ol>
  <li>Create a new Flash document.</li>
  <li>Set its document class to fl.livepreview.LivePreviewParent.</li> 
  <li>Drag your component to the Stage and position it to x and y coordinates of 0.</li>
  <li>Check to ensure that the component parameters remain at their default settings.
  This should be the case if you drag the component from the Library panel or from the 
  Components panel.</li>
  <li>Select Modify &gt; Document from the main menu and, for the Match option, click Contents.</li>
  <li>Click OK.</li>
  <li>Publish the file to see the resulting SWF file as a custom live preview
  SWF file.</li>
     <li>Right-click the asset in the Library panel and select Component Definition from the context menu.</li>
     <li>The Component Definition dialog box allows you to specify a custom live preview 
  SWF file for a component.</li>
  </ol>
    <p>In some cases, you may want to have a custom live preview SWF file that is
  completely different from your component. See the live preview of the fl.containers.UILoader
  component for such an example. This live preview does not use the properties of UILoader, 
  nor does it implement getter and setter functions for these properties. It does, however,
  implement a <code>setSize()</code> method that uses <code>width</code> and <code>height</code>
  parameters to draw the component at the new size.</p>
    <p></p>
<br>
<hr>
</div>
<a name="propertySummary"></a>
<div class="summarySection">
<div class="summaryTableTitle">Public Properties</div>
<table id="summaryTableProperty" class="summaryTable " cellpadding="3" cellspacing="0">
<tr>
<th>&nbsp;</th><th colspan="2">Property</th><th class="summaryTableOwnerCol">Defined&nbsp;by</th>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a class="signatureLink" href="#myInstance">myInstance</a> : DisplayObject<div class="summaryTableDescription">
         The component instance.</div>
</td><td class="summaryTableOwnerCol">LivePreviewParent</td>
</tr>
</table>
</div>
<a name="methodSummary"></a>
<div class="summarySection">
<div class="summaryTableTitle">Public Methods</div>
<table id="summaryTableMethod" class="summaryTable " cellpadding="3" cellspacing="0">
<tr>
<th>&nbsp;</th><th colspan="2">Method</th><th class="summaryTableOwnerCol">Defined&nbsp;by</th>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#LivePreviewParent()">LivePreviewParent</a>()</div>
<div class="summaryTableDescription">
         Initializes the scale and align modes of the Stage, sets the 
   <code>myInstance</code> property, resizes <code>myInstance</code> to
   the proper size and uses the ExternalInterface class to expose 
   functions to Flash.</div>
</td><td class="summaryTableOwnerCol">LivePreviewParent</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#onResize()">onResize</a>(width:Number, height:Number):void</div>
<div class="summaryTableDescription">
         Resizes the component instance on the Stage to the specified
   dimensions, either by calling a user-defined method, or by 
   separately setting the <code>width</code> and <code>height</code> 
   properties.</div>
</td><td class="summaryTableOwnerCol">LivePreviewParent</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#onUpdate()">onUpdate</a>(... updateArray):void</div>
<div class="summaryTableDescription">
         Updates the properties of the component instance.</div>
</td><td class="summaryTableOwnerCol">LivePreviewParent</td>
</tr>
<tr class="">
<td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol">
<div class="summarySignature">
<a class="signatureLink" href="#propertyInspectorSettingUpdate()">propertyInspectorSettingUpdate</a>(updating:Boolean):void</div>
<div class="summaryTableDescription"></div>
</td><td class="summaryTableOwnerCol">LivePreviewParent</td>
</tr>
</table>
</div>
<script type="text/javascript" language="javascript">
<!--
showHideInherited();
--></script>
<div class="MainContent">
<a name="propertyDetail"></a>
<div class="detailSectionHeader">Property detail</div>
<a name="myInstance"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">myInstance</td><td class="detailHeaderType">property</td>
</tr>
</table>
<div class="detailBody">
<code>public var myInstance:DisplayObject</code><p>
         The component instance.
                  </p></div>
<a name="constructorDetail"></a>
<div class="detailSectionHeader">Constructor detail</div>
<a name="LivePreviewParent()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">LivePreviewParent</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">constructor</td>
</tr>
</table>
<div class="detailBody">
<code>public function LivePreviewParent()</code><p>
         Initializes the scale and align modes of the Stage, sets the 
   <code>myInstance</code> property, resizes <code>myInstance</code> to
   the proper size and uses the ExternalInterface class to expose 
   functions to Flash.
                  </p></div>
<a name="methodDetail"></a>
<div class="detailSectionHeader">Method detail</div>
<a name="onResize()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">onResize</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td>
</tr>
</table>
<div class="detailBody">
<code>public function onResize(width:Number, height:Number):void</code><p>
         Resizes the component instance on the Stage to the specified
   dimensions, either by calling a user-defined method, or by 
   separately setting the <code>width</code> and <code>height</code> 
   properties.
      </p><p>This method is called by Flash Player.</p>
      <span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">width</span>:Number</code> &mdash; The new width for the <code>myInstance</code> instance.
   </td>
</tr>
<tr>
<td class="paramSpacer">&nbsp;</td>
</tr>
<tr>
<td width="20px"></td><td><code><span class="label">height</span>:Number</code> &mdash; The new height for the <code>myInstance</code> instance.
                  </td>
</tr>
</table>
</div>
<a name="onUpdate()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">onUpdate</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function onUpdate(... updateArray):void</code><p>
         Updates the properties of the component instance.  
   This method is called by Flash Player when there 
   is a change in the value of a property. This method
   updates all component properties, whether or not 
   they were changed.
      </p><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code>... <span class="label">updateArray</span></code> &mdash; An array of parameter names and values.
                  </td>
</tr>
</table>
</div>
<a name="propertyInspectorSettingUpdate()"></a>
<table cellspacing="0" cellpadding="0" class="detailHeader">
<tr>
<td class="detailHeaderName">propertyInspectorSettingUpdate</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td>
</tr>
</table>
<div class="detailBody">
<code>public function propertyInspectorSettingUpdate(updating:Boolean):void</code><span class="label">Parameters</span>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="20px"></td><td><code><span class="label">updating</span>:Boolean</code></td>
</tr>
</table>
</div>
<br>
<br>
<hr>
<br>
<p></p>
<center class="copyright"> 
</center>
</div>
</body>
</html>
<!-- -->
